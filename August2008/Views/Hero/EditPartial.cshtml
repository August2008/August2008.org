@model August2008.Models.HeroModel

@using (Html.BeginForm("Save", "Hero", FormMethod.Post, new { enctype = "multipart/form-data" })) {
    @Html.HiddenFor(m => m.HeroId)
    @Html.HiddenFor(m => m.LanguageId)
    <table>
        <tr>
            <td style="vertical-align: top; width: 235px; padding-top: 10px">
                <div class="editor-label">
                    @Html.LabelFor2(model => model.Language)
                </div>
                 <div class="editor-field">
                     @Html.DropDownList("Language", Model.Languages, "-", new { id = "LanguageId" })
                </div>
                <div class="editor-label">
                    @Html.LabelFor2(model => model.MilitaryRank)
                </div>
                <div class="editor-field">
                    @Html.DropDownList("Rank", Model.MilitaryRanks, "-", new { id = "MilitaryRankId" })
                </div>

                <div class="editor-label">
                    @Html.LabelFor2(model => model.MilitaryGroup)
                </div>
                <div class="editor-field">
                    @Html.DropDownList("Group", Model.MilitaryGroups, "-", new { id = "MilitaryGroupId" })
                </div>

                <div class="editor-label">
                    @Html.LabelFor2(model => model.MilitaryAward)
                </div>
                <div class="editor-field">
                    @Html.DropDownList("Award", Model.MilitaryAwards, "-", new { id = "MilitaryAwardId" })
                </div>

                <div class="editor-label">
                    @Html.LabelFor2(model => model.FirstName)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.FirstName)
                </div>

                <div class="editor-label">
                    @Html.LabelFor2(model => model.LastName)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.LastName)
                </div>

                <div class="editor-label">
                    @Html.LabelFor2(model => model.MiddleName)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.MiddleName)
                </div>

                <div class="editor-label">
                    @Html.LabelFor2(model => model.Dob)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Dob)
                </div>

                <div class="editor-label">
                    @Html.LabelFor2(model => model.Died)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Died)
                </div>
            </td>
            <td style="vertical-align:top">
                <fieldset>
                    <legend>Photos</legend>
                    <div id="photo-edits">
                        <div id="upload-images">
                            @if (!Model.Photos.IsNullOrEmpty()) {                                
                                foreach (var item in Model.Photos) {
                                    <div class="existing-thumb-img" id="box-@item.HeroPhotoId">
                                        <img class="@(item.IsThumbnail ? "old-hero-photo hero-edit-thumb" : "old-hero-photo")" src="@Url.Action("Photo", "Hero", new {name = item.PhotoUri, size = PhotoSize.Small})"/>
                                        <div class="thumb-img-cmd">
                                            <a href="#" onclick="$.hero.deletePhoto(@item.HeroPhotoId, 'box-@item.HeroPhotoId');return false;">Delete</a>
                                        </div>
                                    </div>
                                }
                            }
                        </div>      
                        <div id="edit-commands">
                            <input id="images" type="file" name="images" class="file" multiple />
                            <div id="fakefile">
                                <button class="btn" type="button" id="btn" onclick="$('#images').click()">Add</button>                
                            </div>  
                            <div>           
                            </div>                                            
                        </div>
                    </div>
                </fieldset>                    
            </td>
        </tr>
        <tr>
            <td colspan="2">
                <div class="editor-label">
                    @Html.LabelFor2(model => model.Biography)
                </div>
                <div class="editor-field">
                    @Html.TextAreaFor(model => model.Biography, new { @class = "hero-bio" })
                </div>                    
            </td>
        </tr>
    </table>
}
<script>
    (function() {
        $('#images').change(function (e) {
            $.hero.onFileChange(this, e);
        });
    }());
</script>
